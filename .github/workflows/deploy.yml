name: Deploy Icon Creator

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
      continue-on-error: true
    
    - name: Run type check
      run: npm run typecheck
      continue-on-error: true
    
    - name: Run tests
      run: npm test
      continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      continue-on-error: true
    
    # Deploy to Vercel
    - name: Deploy to Vercel
      if: github.event_name == 'push'
      run: |
        npm install -g vercel
        vercel --token ${{ secrets.VERCEL_TOKEN }} --prod
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    # Alternative: Deploy to Railway
    - name: Deploy to Railway
      if: github.event_name == 'push' && contains(github.repository, 'railway')
      run: |
        npm install -g @railway/cli
        railway deploy
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    
    # Alternative: Deploy to Render
    - name: Deploy to Render
      if: github.event_name == 'push' && contains(github.repository, 'render')
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}